diff --git a/include/opcode/riscv-opc.h b/include/opcode/riscv-opc.h
index e77b49a6298..23aed15838b 100644
--- a/include/opcode/riscv-opc.h
+++ b/include/opcode/riscv-opc.h
@@ -3473,6 +3473,41 @@
 #define CSR_VL 0xc20
 #define CSR_VTYPE 0xc21
 #define CSR_VLENB 0xc22
+
+// custom extension
+#define MASK_CUSTOM_REG 0xfe00707f
+#define MASK_CUSTOM_IMM 0xfff0707f
+
+#define MATCH_DOT16   0xc00000b
+#define MATCH_DOT8    0xe00000b
+#define MATCH_DOT4    0x8c00000b
+
+#define MATCH_ADD16   0xb
+#define MATCH_ADD8    0x200000b
+#define MATCH_SADD16  0x8000000b
+#define MATCH_SADD16U 0x8000000b
+#define MATCH_SADD8   0x8200000b
+#define MATCH_SADD8U  0x8200000b
+#define MATCH_SUB16   0x400000b
+#define MATCH_SUB8    0x600000b
+
+#define MATCH_MUL16   0x800000b
+#define MATCH_MUL16U  0x4800000b
+#define MATCH_MUL8    0xa00000b
+#define MATCH_MUL8U   0x4a00000b
+
+#define MATCH_UNPK16  0x100b
+#define MATCH_UNPK16U 0x4000100b
+#define MATCH_UNPK8   0x200100b
+#define MATCH_UNPK8U  0x4200100b
+#define MATCH_UNPK4   0x8000100b
+#define MATCH_UNPK4U  0xc000100b
+#define MATCH_UNPK2   0x8200100b
+#define MATCH_UNPK2U  0xc200100b
+
+#define MATCH_SCP_LCL 0x2000200b
+#define MATCH_SCP_REL 0x2200200b
+
 #endif /* RISCV_ENCODING_H */
 #ifdef DECLARE_INSN
 DECLARE_INSN(slli_rv32, MATCH_SLLI_RV32, MASK_SLLI_RV32)
diff --git a/opcodes/riscv-opc.c b/opcodes/riscv-opc.c
index fdd05ac75dc..b878f225afc 100644
--- a/opcodes/riscv-opc.c
+++ b/opcodes/riscv-opc.c
@@ -347,6 +347,37 @@ const struct riscv_opcode riscv_opcodes[] =
 {
 /* name, xlen, isa, operands, match, mask, match_func, pinfo.  */
 
+/* custom extension */
+{"dot16",       0, INSN_CLASS_I, "d,s,t",     MATCH_DOT16, MASK_CUSTOM_REG, match_opcode, 0 },
+{"dot8",        0, INSN_CLASS_I, "d,s,t",     MATCH_DOT8, MASK_CUSTOM_REG, match_opcode, 0 },
+{"dot4",        0, INSN_CLASS_I, "d,s,t",     MATCH_DOT4, MASK_CUSTOM_REG, match_opcode, 0 },
+
+{"add16",       0, INSN_CLASS_I, "d,s,t",     MATCH_ADD16, MASK_CUSTOM_REG, match_opcode, 0 },
+{"add8",        0, INSN_CLASS_I, "d,s,t",     MATCH_ADD8, MASK_CUSTOM_REG, match_opcode, 0 },
+{"sadd16",      0, INSN_CLASS_I, "d,s,t",     MATCH_SADD16, MASK_CUSTOM_REG, match_opcode, 0 },
+{"sadd16u",     0, INSN_CLASS_I, "d,s,t",     MATCH_SADD16U, MASK_CUSTOM_REG, match_opcode, 0 },
+{"sadd8",       0, INSN_CLASS_I, "d,s,t",     MATCH_SADD8, MASK_CUSTOM_REG, match_opcode, 0 },
+{"sadd8u",      0, INSN_CLASS_I, "d,s,t",     MATCH_SADD8U, MASK_CUSTOM_REG, match_opcode, 0 },
+{"sub16",       0, INSN_CLASS_I, "d,s,t",     MATCH_SUB16, MASK_CUSTOM_REG, match_opcode, 0 },
+{"sub8",        0, INSN_CLASS_I, "d,s,t",     MATCH_SUB8, MASK_CUSTOM_REG, match_opcode, 0 },
+
+{"mul16",       0, INSN_CLASS_I, "d,s,t",     MATCH_MUL16, MASK_CUSTOM_REG, match_opcode, 0 },
+{"mul16u",      0, INSN_CLASS_I, "d,s,t",     MATCH_MUL16U, MASK_CUSTOM_REG, match_opcode, 0 },
+{"mul8",        0, INSN_CLASS_I, "d,s,t",     MATCH_MUL8, MASK_CUSTOM_REG, match_opcode, 0 },
+{"mul8u",       0, INSN_CLASS_I, "d,s,t",     MATCH_MUL8U, MASK_CUSTOM_REG, match_opcode, 0 },
+
+{"unpk16",      0, INSN_CLASS_I, "d,s",       MATCH_UNPK16, MASK_CUSTOM_IMM, match_opcode, 0 },
+{"unpk16u",     0, INSN_CLASS_I, "d,s",       MATCH_UNPK16U, MASK_CUSTOM_IMM, match_opcode, 0 },
+{"unpk8",       0, INSN_CLASS_I, "d,s",       MATCH_UNPK8, MASK_CUSTOM_IMM, match_opcode, 0 },
+{"unpk8u",      0, INSN_CLASS_I, "d,s",       MATCH_UNPK8U, MASK_CUSTOM_IMM, match_opcode, 0 },
+{"unpk4",       0, INSN_CLASS_I, "d,s",       MATCH_UNPK4, MASK_CUSTOM_IMM, match_opcode, 0 },
+{"unpk4u",      0, INSN_CLASS_I, "d,s",       MATCH_UNPK4U, MASK_CUSTOM_IMM, match_opcode, 0 },
+{"unpk2",       0, INSN_CLASS_I, "d,s",       MATCH_UNPK2, MASK_CUSTOM_IMM, match_opcode, 0 },
+{"unpk2u",      0, INSN_CLASS_I, "d,s",       MATCH_UNPK2U, MASK_CUSTOM_IMM, match_opcode, 0 },
+
+{"scp.lcl",     0, INSN_CLASS_I, "d,s",       MATCH_SCP_LCL, MASK_CUSTOM_IMM, match_opcode, 0 },
+{"scp.rel",     0, INSN_CLASS_I, "d,s",       MATCH_SCP_REL, MASK_CUSTOM_IMM, match_opcode, 0 },
+
 /* Standard hints.  */
 {"prefetch.i",  0, INSN_CLASS_ZICBOP, "Wif(s)", MATCH_PREFETCH_I, MASK_PREFETCH_I, match_opcode, 0 },
 {"prefetch.r",  0, INSN_CLASS_ZICBOP, "Wif(s)", MATCH_PREFETCH_R, MASK_PREFETCH_R, match_opcode, 0 },
